##################################################################################
PART 1
##################################################################################

#include <bits/stdc++.h>
#define nl "\n"
using namespace std;

int findVal(char c)
{
    int num = (int)c;
    if (num > 91)
    {
        return num - 96;
    }
    else
    {
        return num - 38;
    }
}

int calcVal(string temp)
{
    for (int i = 0; i < temp.length() / 2; ++i)
    {
        for (int j = temp.length() / 2; j < temp.length(); ++j)
        {
            if (temp[i] == temp[j])
            {
                return findVal(temp[i]);
            }
        }
    }
    return 0;
}

void solve()
{
    long total = 0;
    string temp;
    while (cin >> temp)
    {
        total += calcVal(temp);
    }
    cout << total;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
    freopen("output.out", "w", stdout);
#endif

    solve();
}


##################################################################################
PART 2
##################################################################################

#include <bits/stdc++.h>
#define nl "\n"
using namespace std;

int findVal(char c)
{
    int num = (int)c;
    if (num > 91)
    {
        return num - 96;
    }
    else
    {
        return num - 38;
    }
}

int calcVal(string str1, string str2, string str3)
{
    for (int i = 0; i < str1.length(); ++i)
    {
        if (str2.find(str1[i]) != string::npos)
        {
            if (str3.find(str1[i]) != string::npos)
            {
                return findVal(str1[i]);
            }
        }
    }
    return 0;
}

void solve()
{
    int total = 0;
    string str1, str2, str3;

    while (cin >> str1 >> str2 >> str3)
    {
        total += calcVal(str1, str2, str3);
    }
    cout << total;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
    freopen("output.out", "w", stdout);
#endif

    solve();
}
